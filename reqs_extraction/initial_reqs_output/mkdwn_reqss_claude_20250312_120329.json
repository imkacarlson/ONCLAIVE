{
  "requirements": [
    {
      "requirement_text": "\"The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b or a REST endpoint for another FHIR server. This may include any security context information.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "profiles.md, PlannetEndpoint profile definition"
    },
    {
      "requirement_text": "\"The HealthCareService resource typically describes services offered by an organization/practitioner at a location. The resource may be used to encompass a variety of services covering the entire healthcare spectrum, including promotion, prevention, diagnostics, hospital and ambulatory care, home care, long-term care, and other health-related and community services.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "profiles.md, PlannetHealthcareService profile definition"
    },
    {
      "requirement_text": "\"An InsurancePlan is a discrete package of health insurance coverage benefits that are offered under a particular network type. A given payer's products typically differ by network type and/or covered benefits. A plan pairs a product's covered benefits with the particular cost sharing structure offered to a consumer. A given product may comprise multiple plans (i.e. each plan offers different cost sharing requirements for the same set of covered benefits).\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "profiles.md, PlannetInsurancePlan profile definition"
    },
    {
      "requirement_text": "\"A Location is the physical place where healthcare services are provided, practitioners are employed, organizations are based, etc. Locations can range in scope from a room in a building to a geographic region/area.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "profiles.md, PlannetLocation profile definition"
    },
    {
      "requirement_text": "\"A Network refers to a healthcare provider insurance network. A healthcare provider insurance network is an aggregation of organizations and individuals that deliver a set of services across a geography through health insurance products/plans. A network is typically owned by a payer.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "profiles.md, PlannetNetwork profile definition"
    },
    {
      "requirement_text": "\"An organization is a formal or informal grouping of people or organizations with a common purpose, such as a company, institution, corporation, community group, or healthcare practice.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "profiles.md, PlannetOrganization profile definition"
    },
    {
      "requirement_text": "\"The OrganizationAffiliation resource describes relationships between two or more organizations, including the services one organization provides another, the location(s) where they provide services, the availability of those services, electronic endpoints, and other relevant information.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "profiles.md, PlannetOrganizationAffiliation profile definition"
    },
    {
      "requirement_text": "\"Practitioner is a person who is directly or indirectly involved in the provisioning of healthcare.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "profiles.md, PlannetPractitioner profile definition"
    },
    {
      "requirement_text": "\"PractitionerRole describes the role a practitioner plays at an organization, including the services they provide, the location(s) where they work, and their availability, electronic endpoints, and other relevant information.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "profiles.md, PlannetPractitionerRole profile definition"
    },
    {
      "requirement_text": "\"Publication of this data through a standard FHIR-based API will enable third parties to develop applications through which consumers and providers can query the participants in a payer's network that may provide services that address their health care needs.\"",
      "conformance": "SHALL",
      "actor": "Health Plan API Actor",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Introduction section"
    },
    {
      "requirement_text": "\"The IG defines the API that exposes a payer's provider network (including pharmacy locations where appropriate) for access by a consumer or provider application.\"",
      "conformance": "SHALL",
      "actor": "Health Plan API Actor",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Introduction section, diagram caption"
    },
    {
      "requirement_text": "\"This is a query only API (GET) and does not support PUT or POST.\"",
      "conformance": "SHALL",
      "actor": "Health Plan API Actor",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Introduction section, diagram caption"
    },
    {
      "requirement_text": "\"This implementation guide was written for a US audience and profiles resources from [US Core STU 4], where available (Practitioner, Organization and Location), and otherwise from R4 (OrganizationAffiliation, PractitionerRole, HealthCareService, Endpoint).\"",
      "conformance": "SHALL",
      "actor": "Health Plan API Actor",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Relation to US Core and other IGs section"
    },
    {
      "requirement_text": "\"The PractitionerRole profile from US Core was not used because it is over-constrained for use in a Provider Directory based on Payer information.\"",
      "conformance": "SHALL NOT",
      "actor": "Health Plan API Actor",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Relation to US Core and other IGs section"
    },
    {
      "requirement_text": "\"The Network profile is based on USCore Organization, since there was no contradiction between the USCore profile and the Plan-Net requirements.\"",
      "conformance": "SHALL",
      "actor": "Health Plan API Actor",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Relation to US Core and other IGs section"
    },
    {
      "requirement_text": "\"However, the NPI and CLIA identifier types, which are Must-Support, are clearly intended for provider organizations only and are not expected to be populated for other organization types.\"",
      "conformance": "SHOULD",
      "actor": "Health Plan API Actor",
      "conditional": "True",
      "sub-requirements": "NONE",
      "source": "Relation to US Core and other IGs section"
    },
    {
      "requirement_text": "\"This implementation guide assumes that the directory endpoint is known to the client.\"",
      "conformance": "SHALL",
      "actor": "Application Actor",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Disclaimers and Assumptions section"
    },
    {
      "requirement_text": "\"Access to the Plan-Net service should not require authentication, and the server should not maintain any records that could associate the consumer with the entities that were queried.\"",
      "conformance": "SHOULD NOT",
      "actor": "Plan-Net service",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Implementation Notes > Privacy Considerations section"
    },
    {
      "requirement_text": "\"A conformant Plan-Net service SHALL NOT require a directory mobile application to send consumer identifying information in order to query content.\"",
      "conformance": "SHALL NOT",
      "actor": "Plan-Net service",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Implementation Notes > Privacy Considerations section"
    },
    {
      "requirement_text": "\"A directory mobile application SHALL NOT send consumer identifiable information when querying a Plan-Net service.\"",
      "conformance": "SHALL NOT",
      "actor": "Directory mobile application",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Implementation Notes > Privacy Considerations section"
    },
    {
      "requirement_text": "\"Health Plan API actors SHALL be capable of populating all Must Support data elements as part of the query results.\"",
      "conformance": "SHALL",
      "actor": "Health Plan API",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Implementation Notes > Must Support > Health Plan API Requirements section"
    },
    {
      "requirement_text": "\"In situations where information on a particular Must Support data element is not present and the minimum cardinality is 0, the Health Plan API actors SHALL NOT include the data elements in the resource instance returned as part of the query results.\"",
      "conformance": "SHALL NOT",
      "actor": "Health Plan API",
      "conditional": "True",
      "sub-requirements": "NONE",
      "source": "Implementation Notes > Must Support > Health Plan API Requirements section"
    },
    {
      "requirement_text": "\"In situations where information on a particular data element is not present and the minimum cardinality is >0 SHALL send the reason for the missing information using values (such as nullFlavors) from the value set where they exist or use the dataAbsentReason extension.\"",
      "conformance": "SHALL",
      "actor": "Health Plan API",
      "conditional": "True",
      "sub-requirements": "NONE",
      "source": "Implementation Notes > Must Support > Health Plan API Requirements section"
    },
    {
      "requirement_text": "\"Application actors SHALL be capable of processing resource instances containing the Must Support data elements without generating an error or causing the application to fail.\"",
      "conformance": "SHALL",
      "actor": "Application",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Implementation Notes > Must Support > Application Requirements section"
    },
    {
      "requirement_text": "\"Application actors SHOULD be capable of displaying the data elements for human use or storing the information for other purposes.\"",
      "conformance": "SHOULD",
      "actor": "Application",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Implementation Notes > Must Support > Application Requirements section"
    },
    {
      "requirement_text": "\"When querying Health Plan API actors, Application actors SHALL interpret missing Must Support data elements within resource instances as data not present in the Health Plan API actors system.\"",
      "conformance": "SHALL",
      "actor": "Application",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Implementation Notes > Must Support > Application Requirements section"
    },
    {
      "requirement_text": "\"Consumer App actors SHALL be able to process resource instances containing Must Support data elements asserting missing information.\"",
      "conformance": "SHALL",
      "actor": "Consumer App",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Implementation Notes > Must Support > Application Requirements section"
    },
    {
      "requirement_text": "\"Each profile in this guide requires that the lastUpdate timestamp be provided as part of the profile's data content.\"",
      "conformance": "SHALL",
      "actor": "Health Plan API",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Implementation Notes > Client Detection of Updates Directory Content section"
    },
    {
      "requirement_text": "\"Clients that cache query results can track additions or modifications to directory content through queries that filter content using the _lastUpdated search parameter.\"",
      "conformance": "MAY",
      "actor": "Client",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Implementation Notes > Client Detection of Updates Directory Content section"
    },
    {
      "requirement_text": "\"Clients should periodically check that data cached from past queries has not been deleted by querying for the same elements by _id.\"",
      "conformance": "SHOULD",
      "actor": "Client",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Implementation Notes > Client Detection of Updates Directory Content section"
    },
    {
      "requirement_text": "\"Practitioners and Organizations indicate participation in a Network with a link to the Network using a PractitionerRole or OrganizationAffiliation instance, respectively.\"",
      "conformance": "SHALL",
      "actor": "Practitioners, Organizations",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Insurance Plan and Network section"
    },
    {
      "requirement_text": "\"PractitionerRole and OrganizationAffiliation instances are what tie Practitioners and Organizations to HealthcareServices, Organizations, Networks and Locations.\"",
      "conformance": "SHALL",
      "actor": "PractitionerRole, OrganizationAffiliation",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Insurance Plan and Network section"
    },
    {
      "requirement_text": "\"Location instances provide information about location where service is provided, including contact information, address, accessibility, hours of operation and contact, as well as position (lattitude and longitude).\"",
      "conformance": "SHALL",
      "actor": "Location",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Location section"
    },
    {
      "requirement_text": "\"Locations can also be used to represent regions using an associated or attached GeoJSON object.\"",
      "conformance": "MAY",
      "actor": "Location",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Location section"
    },
    {
      "requirement_text": "\"Practitioner instances provide information about a specific person, including name, gender, languages spoken, and qualifications.\"",
      "conformance": "SHALL",
      "actor": "Practitioner",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Practitioners and PractitionerRoles section"
    },
    {
      "requirement_text": "\"PractitionerRole defines a role for a particular practitioner, and associates it with locations, specialties, an organization, and networks.\"",
      "conformance": "SHALL",
      "actor": "PractitionerRole",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Practitioners and PractitionerRoles section"
    },
    {
      "requirement_text": "\"Organization instances provide information about a specific organization and organizational hierarchies, including organization name, specialty, type, address and contact information.\"",
      "conformance": "SHALL",
      "actor": "Organization",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organizations and Organization Affiliations section"
    },
    {
      "requirement_text": "\"Organization Affiliation instances describe a role, and link a participating organization that provides or performs the role, with an organization where that role is available, and also links the participating organization to a HealthcareServices and networks.\"",
      "conformance": "SHALL",
      "actor": "OrganizationAffiliation",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organizations and Organization Affiliations section"
    },
    {
      "requirement_text": "\"OrganizationalAffiliation can also be used to associate a HealthcareService provided by an organization with networks.\"",
      "conformance": "MAY",
      "actor": "OrganizationAffiliation",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organizations and Organization Affiliations section"
    },
    {
      "requirement_text": "\"An Endpoint instance provides technical details of an endpoint that can be used for electronic services, such as a portal or FHIR REST services, messaging or operations, or DIRECT messaging.\"",
      "conformance": "SHALL",
      "actor": "Endpoint",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoints section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHALL: Implement the RESTful behavior according to the FHIR specification.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHALL: Return the following response classes: (Status 400): invalid parameter, (Status 401/4xx): unauthorized request, (Status 403): insufficient scope, (Status 404): unknown resource, (Status 410): deleted resource.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHALL: Support json source formats for all Plan-Net interactions.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHALL: Identify the Plan-Net profiles supported as part of the FHIR `meta.profile` attribute for each instance.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHALL: Support the searchParameters on each profile individually and in combination.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHALL: Support forward and reverse chaining on all search parameters that specify the 'chain' property\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHOULD: Support xml source formats for all Plan-Net interactions.\"",
      "conformance": "SHOULD",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"A server SHALL reject any unauthorized requests by returning an `HTTP 401` unauthorized response code.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section, Security subsection"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of returning a Endpoint resource using: `GET [base]/Endpoint/[id]`\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoint section, Fetch and Search Criteria subsection"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a Endpoint resource using: `GET [base]/Endpoint/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoint section, Fetch and Search Criteria subsection"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: Endpoint:organization - `GET [base]/Endpoint?[parameter=value]&_include=Endpoint:organization`\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoint section, Fetch and Search Criteria subsection"
    },
    {
      "requirement_text": "\"A Server SHALL support the [organization] search parameter for Endpoint resources: `GET [base]/Endpoint?organization=[organization]`\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoint section, Search Parameter Summary subsection"
    },
    {
      "requirement_text": "\"A Server SHALL support the [_id] search parameter for Endpoint resources: `GET [base]/Endpoint?_id=[id]`\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoint section, Search Parameter Summary subsection"
    },
    {
      "requirement_text": "\"A Server SHALL support the [_lastUpdated] search parameter for Endpoint resources: `GET [base]/Endpoint?_lastUpdated=[_lastUpdated]`\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoint section, Search Parameter Summary subsection"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a HealthcareService resource using: `GET [base]/HealthcareService/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: HealthcareService:location - `GET [base]/HealthcareService?[parameter=value]&_include=HealthcareService:location`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: HealthcareService:coverage-area - `GET [base]/HealthcareService?[parameter=value]&_include=HealthcareService:coverage-area`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: HealthcareService:organization - `GET [base]/HealthcareService?[parameter=value]&_include=HealthcareService:organization`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: HealthcareService:endpoint - `GET [base]/HealthcareService?[parameter=value]&_include=HealthcareService:endpoint`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: PractitionerRole:service - `GET [base]/HealthcareService?[parameter=value]&_revinclude=PractitionerRole:service`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: OrganizationAffiliation:service - `GET [base]/HealthcareService?[parameter=value]&_revinclude=OrganizationAffiliation:service`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of returning a InsurancePlan resource using: `GET [base]/InsurancePlan/[id]`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "InsurancePlan section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a InsurancePlan resource using: `GET [base]/InsurancePlan/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "InsurancePlan section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: InsurancePlan:administered-by - `GET [base]/InsurancePlan?[parameter=value]&_include=InsurancePlan:administered-by`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "InsurancePlan section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: InsurancePlan:owned-by - `GET [base]/InsurancePlan?[parameter=value]&_include=InsurancePlan:owned-by`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "InsurancePlan section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: InsurancePlan:coverage-area - `GET [base]/InsurancePlan?[parameter=value]&_include=InsurancePlan:coverage-area`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "InsurancePlan section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of returning a Location resource using: `GET [base]/Location/[id]`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Location section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a Location resource using: `GET [base]/Location/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Location section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a Organization resource using: `GET [base]/Organization/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: Organization:partof - `GET [base]/Organization?[parameter=value]&_include=Organization:partof`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: Organization:endpoint - `GET [base]/Organization?[parameter=value]&_include=Organization:endpoint`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: Organization:coverage-area - `GET [base]/Organization?[parameter=value]&_include=Organization:coverage-area`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: Endpoint:organization - `GET [base]/Organization?[parameter=value]&_revinclude=Endpoint:organization`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: HealthcareService:organization - `GET [base]/Organization?[parameter=value]&_revinclude=HealthcareService:organization`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: InsurancePlan:administered-by - `GET [base]/Organization?[parameter=value]&_revinclude=InsurancePlan:administered-by`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: InsurancePlan:owned-by - `GET [base]/Organization?[parameter=value]&_revinclude=InsurancePlan:owned-by`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: OrganizationAffiliation:primary-organization - `GET [base]/Organization?[parameter=value]&_revinclude=OrganizationAffiliation:primary-organization`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: PractitionerRole:organization - `GET [base]/Organization?[parameter=value]&_revinclude=PractitionerRole:organization`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: PractitionerRole:network - `GET [base]/Organization?[parameter=value]&_revinclude=PractitionerRole:network`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: OrganizationAffiliation:participating-organization - `GET [base]/Organization?[parameter=value]&_revinclude=OrganizationAffiliation:participating-organization`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of returning a OrganizationAffiliation resource using: `GET [base]/OrganizationAffiliation/[id]`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "OrganizationAffiliation > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a OrganizationAffiliation resource using: `GET [base]/OrganizationAffiliation/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "OrganizationAffiliation > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: OrganizationAffiliation:primary-organization - `GET [base]/OrganizationAffiliation?[parameter=value]&_include=OrganizationAffiliation:primary-organization`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "OrganizationAffiliation > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of returning a Practitioner resource using: `GET [base]/Practitioner/[id]`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Practitioner > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a Practitioner resource using: `GET [base]/Practitioner/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Practitioner > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: PractitionerRole:practitioner - `GET [base]/Practitioner?[parameter=value]&_revinclude=PractitionerRole:practitioner`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Practitioner > Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"This Section describes the expected capabilities of the Plan-Net Server actor which is responsible for providing responses to the queries submitted by the Plan-Net Requestors.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Artifacts Summary section, Behavior: Capability Statements, Plan-Net CapabilityStatement description"
    },
    {
      "requirement_text": "\"The complete list of FHIR profiles, RESTful operations, and search parameters supported by Plan-Net Servers are defined.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Artifacts Summary section, Behavior: Capability Statements, Plan-Net CapabilityStatement description"
    },
    {
      "requirement_text": "\"Systems implementing this capability statement should meet the CMS FInal Rule requirement for provider directory access.\"",
      "conformance": "SHOULD",
      "actor": "Systems implementing the Plan-Net CapabilityStatement",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Artifacts Summary section, Behavior: Capability Statements, Plan-Net CapabilityStatement description"
    },
    {
      "requirement_text": "\"Plan-Net Clients can use the required capabilities to access necessary data based on their local use cases and other contextual requirements.\"",
      "conformance": "MAY",
      "actor": "Plan-Net Clients",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Artifacts Summary section, Behavior: Capability Statements, Plan-Net CapabilityStatement description"
    },
    {
      "requirement_text": "\"The HealthCareService resource typically describes services offered by an organization/practitioner at a location.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Resource Profiles - Plan-Net HealthcareService"
    },
    {
      "requirement_text": "\"An InsurancePlan is a discrete package of health insurance coverage benefits that are offered under a particular network type.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Resource Profiles - Plan-Net InsurancePlan"
    },
    {
      "requirement_text": "\"A Location is the physical place where healthcare services are provided, practitioners are employed, organizations are based, etc.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Resource Profiles - Plan-Net Location"
    },
    {
      "requirement_text": "\"A Network refers to a healthcare provider insurance network.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Resource Profiles - Plan-Net Network"
    },
    {
      "requirement_text": "\"An organization is a formal or informal grouping of people or organizations with a common purpose, such as a company, institution, corporation, community group, or healthcare practice.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Resource Profiles - Plan-Net Organization"
    },
    {
      "requirement_text": "\"When the contact is a department name, rather than a human (e.g., patient help line), include a blank family and given name, and provide the department name in contact.name.text\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "True",
      "sub-requirements": "NONE",
      "source": "Structures: Resource Profiles - Plan-Net Organization"
    },
    {
      "requirement_text": "\"The OrganizationAffiliation resource describes relationships between two or more organizations, including the services one organization provides another, the location(s) where they provide services, the availability of those services, electronic endpoints, and other relevant information.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Resource Profiles - Plan-Net OrganizationAffiliation"
    },
    {
      "requirement_text": "\"Practitioner is a person who is directly or indirectly involved in the provisioning of healthcare.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Resource Profiles - Plan-Net Practitioner"
    },
    {
      "requirement_text": "\"PractionerRole describes details about a provider, which can be a practitioner or an organization.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Resource Profiles - Plan-Net PractitionerRole"
    },
    {
      "requirement_text": "\"An extension to describe accessibility options offered by a practitioner or at a location.\"",
      "conformance": "MAY",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Extension Definitions - Accessibility"
    },
    {
      "requirement_text": "\"An extension to express a practitioner's spoken proficiency with the language indicated in practitioner.communication.\"",
      "conformance": "MAY",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Extension Definitions - Communication Proficiency"
    },
    {
      "requirement_text": "\"An extension representing the days and times a contact point is available\"",
      "conformance": "MAY",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Extension Definitions - Contactpoint Availabletime"
    },
    {
      "requirement_text": "\"An extension describing the service delivery method. If service delivery is virtual, one or more delivery modalities should be specified.\"",
      "conformance": "MAY",
      "actor": "Server",
      "conditional": "True",
      "sub-requirements": "NONE",
      "source": "Structures: Extension Definitions - Delivery Method"
    },
    {
      "requirement_text": "\"EndpointUseCase is an enumeration of the specific use cases (service descriptions) supported by the endpoint\"",
      "conformance": "MAY",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Extension Definitions - Endpoint Usecase"
    },
    {
      "requirement_text": "\"A reference to a Location resource (plannet-Location) defining the coverage area of a health insurance provider network\"",
      "conformance": "MAY",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Extension Definitions - Location Reference"
    },
    {
      "requirement_text": "\"A reference to the healthcare provider insurance networks (plannet-Network) the practitioner participates in through their role\"",
      "conformance": "MAY",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Extension Definitions - Network Reference"
    },
    {
      "requirement_text": "\"New Patients indicates whether new patients are being accepted in general, or from a specific network.\"",
      "conformance": "MAY",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Extension Definitions - New Patients"
    },
    {
      "requirement_text": "\"This extension is included in the PractitionerRole, HealthcareService, and Location profiles.\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "True",
      "sub-requirements": "NONE",
      "source": "Structures: Extension Definitions - New Patients"
    },
    {
      "requirement_text": "\"An extension to provide a human-readable description of an organization.\"",
      "conformance": "MAY",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Extension Definitions - Org Description"
    },
    {
      "requirement_text": "\"An extension to add status and whereValid elements to a practitioner's qualifications.\"",
      "conformance": "MAY",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Extension Definitions - Practitioner Qualification"
    },
    {
      "requirement_text": "\"An extension to add qualifications for an organization (e.g. accreditation) or practitionerRole (e.g. registered to prescribe controlled substances).\"",
      "conformance": "MAY",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Extension Definitions - Qualification"
    },
    {
      "requirement_text": "\"A reference to an alternative point of contact (plannet-PractitionerRole, plannet-Organization, plannet-OrganizationAffiliation, or plannet-Location) for this organization\"",
      "conformance": "MAY",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Structures: Extension Definitions - Via Intermediary"
    }
  ],
  "processed_files": [
    "ChangeHistory.md",
    "profiles.md",
    "index.md",
    "examples.md",
    "implementation.md",
    "CapabilityStatement_plan_net.md",
    "artifacts.md"
  ],
  "output_file": "/Users/ceadams/Documents/onclaive/onclaive/reqs_extraction/processed_output/mkdwn_reqs_claude_20250312_120329.csv"
}