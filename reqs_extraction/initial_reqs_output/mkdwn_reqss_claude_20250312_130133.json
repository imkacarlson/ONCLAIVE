{
  "requirements": [
    {
      "requirement_text": "\"Publication of this data through a standard FHIR-based API will enable third parties to develop applications through which consumers and providers can query the participants in a payer's network that may provide services that address their health care needs.\"",
      "conformance": "SHALL",
      "actor": "Health Plan API Actor",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Introduction section"
    },
    {
      "requirement_text": "\"The IG defines the API that exposes a payer's provider network (including pharmacy locations where appropriate) for access by a consumer or provider application. This is a query only API (GET) and does not support PUT or POST.\"",
      "conformance": "SHALL",
      "actor": "Health Plan API Actor",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Introduction section, diagram description"
    },
    {
      "requirement_text": "\"This implementation guide assumes that the directory endpoint is known to the client.\"",
      "conformance": "SHALL",
      "actor": "Application Actor",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Disclaimers and Assumptions section"
    },
    {
      "requirement_text": "\"A conformant Plan-Net service SHALL NOT require a directory mobile application to send consumer identifying information in order to query content.\"",
      "conformance": "SHALL NOT",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Privacy Considerations section"
    },
    {
      "requirement_text": "\"A directory mobile application SHALL NOT send consumer identifiable information when querying a Plan-Net service.\"",
      "conformance": "SHALL NOT",
      "actor": "Client",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Privacy Considerations section"
    },
    {
      "requirement_text": "\"Health Plan API actors SHALL be capable of populating all Must Support data elements as part of the query results.\"",
      "conformance": "SHALL",
      "actor": "Health Plan API",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Must Support section"
    },
    {
      "requirement_text": "\"In situations where information on a particular Must Support data element is not present and the minimum cardinality is 0 , the Health Plan API actors SHALL NOT include the data elements in the resource instance returned as part of the query results.\"",
      "conformance": "SHALL NOT",
      "actor": "Health Plan API",
      "conditional": "True",
      "sub-requirements": "NONE",
      "source": "Must Support section"
    },
    {
      "requirement_text": "\"In situations where information on a particular data element is not present and the minimum cardinality is >0 SHALL send the reason for the missing information using values (such as nullFlavors) from the value set where they exist or use the dataAbsentReason extension.\"",
      "conformance": "SHALL",
      "actor": "Health Plan API",
      "conditional": "True",
      "sub-requirements": "NONE",
      "source": "Must Support section"
    },
    {
      "requirement_text": "\"Application actors SHALL be capable of processing resource instances containing the Must Support data elements without generating an error or causing the application to fail.\"",
      "conformance": "SHALL",
      "actor": "Application",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Must Support section"
    },
    {
      "requirement_text": "\"Application actors SHOULD be capable of displaying the data elements for human use or storing the information for other purposes.\"",
      "conformance": "SHOULD",
      "actor": "Application",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Must Support section"
    },
    {
      "requirement_text": "\"When querying Health Plan API actors, Application actors SHALL interpret missing Must Support data elements within resource instances as data not present in the Health Plan API actors system.\"",
      "conformance": "SHALL",
      "actor": "Application",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Must Support section"
    },
    {
      "requirement_text": "\"Consumer App actors SHALL be able to process resource instances containing Must Support data elements asserting missing information.\"",
      "conformance": "SHALL",
      "actor": "Consumer App",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Must Support section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHALL: Implement the RESTful behavior according to the FHIR specification.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHALL: Return the following response classes: (Status 400): invalid parameter, (Status 401/4xx): unauthorized request, (Status 403): insufficient scope, (Status 404): unknown resource, (Status 410): deleted resource.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHALL: Support json source formats for all Plan-Net interactions.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHALL: Identify the Plan-Net profiles supported as part of the FHIR `meta.profile` attribute for each instance.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHALL: Support the searchParameters on each profile individually and in combination.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHALL: Support forward and reverse chaining on all search parameters that specify the 'chain' property\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"The Plan-Net Server SHOULD: Support xml source formats for all Plan-Net interactions.\"",
      "conformance": "SHOULD",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "FHIR RESTful Capabilities section"
    },
    {
      "requirement_text": "\"A server SHALL reject any unauthorized requests by returning an `HTTP 401` unauthorized response code.\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Security section"
    },
    {
      "requirement_text": "\"Conformance Expectation: SHALL [for Endpoint resource]\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoint section"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of returning a Endpoint resource using: `GET [base]/Endpoint/[id]`\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoint section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a Endpoint resource using: `GET [base]/Endpoint/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoint section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: Endpoint:organization - `GET [base]/Endpoint?[parameter=value]&_include=Endpoint:organization`\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoint section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL support the [organization] search parameter for Endpoint: `GET [base]/Endpoint?organization=[organization]`\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoint section, Search Parameter Summary"
    },
    {
      "requirement_text": "\"A Server SHALL support the [_id] search parameter for Endpoint: `GET [base]/Endpoint?_id=[id]`\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoint section, Search Parameter Summary"
    },
    {
      "requirement_text": "\"A Server SHALL support the [_lastUpdated] search parameter for Endpoint: `GET [base]/Endpoint?_lastUpdated=[_lastUpdated]`\"",
      "conformance": "SHALL",
      "actor": "Plan-Net Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Endpoint section, Search Parameter Summary"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a HealthcareService resource using: `GET [base]/HealthcareService/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: HealthcareService:location - `GET [base]/HealthcareService?[parameter=value]&_include=HealthcareService:location`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: HealthcareService:coverage-area - `GET [base]/HealthcareService?[parameter=value]&_include=HealthcareService:coverage-area`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: HealthcareService:organization - `GET [base]/HealthcareService?[parameter=value]&_include=HealthcareService:organization`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: HealthcareService:endpoint - `GET [base]/HealthcareService?[parameter=value]&_include=HealthcareService:endpoint`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: PractitionerRole:service - `GET [base]/HealthcareService?[parameter=value]&_revinclude=PractitionerRole:service`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: OrganizationAffiliation:service - `GET [base]/HealthcareService?[parameter=value]&_revinclude=OrganizationAffiliation:service`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "HealthcareService section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of returning a InsurancePlan resource using: `GET [base]/InsurancePlan/[id]`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "InsurancePlan section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a InsurancePlan resource using: `GET [base]/InsurancePlan/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "InsurancePlan section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: InsurancePlan:administered-by - `GET [base]/InsurancePlan?[parameter=value]&_include=InsurancePlan:administered-by`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "InsurancePlan section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: InsurancePlan:owned-by - `GET [base]/InsurancePlan?[parameter=value]&_include=InsurancePlan:owned-by`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "InsurancePlan section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: InsurancePlan:coverage-area - `GET [base]/InsurancePlan?[parameter=value]&_include=InsurancePlan:coverage-area`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "InsurancePlan section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of returning a Location resource using: `GET [base]/Location/[id]`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Location section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a Location resource using: `GET [base]/Location/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Location section, Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a Organization resource using: `GET [base]/Organization/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization - Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: Organization:partof - `GET [base]/Organization?[parameter=value]&_include=Organization:partof`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization - Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: Organization:endpoint - `GET [base]/Organization?[parameter=value]&_include=Organization:endpoint`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization - Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: Organization:coverage-area - `GET [base]/Organization?[parameter=value]&_include=Organization:coverage-area`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization - Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: Endpoint:organization - `GET [base]/Organization?[parameter=value]&_revinclude=Endpoint:organization`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Organization - Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of returning a OrganizationAffiliation resource using: `GET [base]/OrganizationAffiliation/[id]`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "OrganizationAffiliation - Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a OrganizationAffiliation resource using: `GET [base]/OrganizationAffiliation/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "OrganizationAffiliation - Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: OrganizationAffiliation:primary-organization - `GET [base]/OrganizationAffiliation?[parameter=value]&_include=OrganizationAffiliation:primary-organization`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "OrganizationAffiliation - Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of returning a Practitioner resource using: `GET [base]/Practitioner/[id]`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Practitioner - Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a Practitioner resource using: `GET [base]/Practitioner/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Practitioner - Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _revincludes: PractitionerRole:practitioner - `GET [base]/Practitioner?[parameter=value]&_revinclude=PractitionerRole:practitioner`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Practitioner - Fetch and Search Criteria"
    },
    {
      "requirement_text": "\"A Server SHOULD be capable of returning a PractitionerRole resource using: `GET [base]/PractitionerRole/[id]/_history/vid`\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Fetch and Search Criteria section"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: PractitionerRole:practitioner - `GET [base]/PractitionerRole?[parameter=value]&_include=PractitionerRole:practitioner`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Fetch and Search Criteria section"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: PractitionerRole:organization - `GET [base]/PractitionerRole?[parameter=value]&_include=PractitionerRole:organization`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Fetch and Search Criteria section"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: PractitionerRole:location - `GET [base]/PractitionerRole?[parameter=value]&_include=PractitionerRole:location`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Fetch and Search Criteria section"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: PractitionerRole:service - `GET [base]/PractitionerRole?[parameter=value]&_include=PractitionerRole:service`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Fetch and Search Criteria section"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: PractitionerRole:network - `GET [base]/PractitionerRole?[parameter=value]&_include=PractitionerRole:network`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Fetch and Search Criteria section"
    },
    {
      "requirement_text": "\"A Server SHALL be capable of supporting the following _includes: PractitionerRole:endpoint - `GET [base]/PractitionerRole?[parameter=value]&_include=PractitionerRole:endpoint`\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Fetch and Search Criteria section"
    },
    {
      "requirement_text": "\"A Server SHALL support search-type for PractitionerRole\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Profile Interaction Summary section"
    },
    {
      "requirement_text": "\"A Server SHALL support read for PractitionerRole\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Profile Interaction Summary section"
    },
    {
      "requirement_text": "\"A Server SHOULD support vread for PractitionerRole\"",
      "conformance": "SHOULD",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Profile Interaction Summary section"
    },
    {
      "requirement_text": "\"A Server SHALL support the practitioner search parameter for PractitionerRole\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Search Parameter Summary section"
    },
    {
      "requirement_text": "\"A Server SHALL support the organization search parameter for PractitionerRole\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Search Parameter Summary section"
    },
    {
      "requirement_text": "\"A Server SHALL support the location search parameter for PractitionerRole\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Search Parameter Summary section"
    },
    {
      "requirement_text": "\"A Server SHALL support the service search parameter for PractitionerRole\"",
      "conformance": "SHALL",
      "actor": "Server",
      "conditional": "False",
      "sub-requirements": "NONE",
      "source": "Search Parameter Summary section"
    }
  ],
  "processed_files": [
    "ChangeHistory.md",
    "profiles.md",
    "index.md",
    "examples.md",
    "implementation.md",
    "CapabilityStatement_plan_net.md",
    "artifacts.md"
  ],
  "output_file": "/Users/ceadams/Documents/onclaive/onclaive/reqs_extraction/processed_output/mkdwn_reqs_claude_20250312_130133.csv"
}